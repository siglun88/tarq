name: Build Wheels

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64, aarch64]
        exclude:
          - os: windows-latest
            target: aarch64  # Windows doesn't support aarch64 easily

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install Maturin
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}

      # Add Docker setup to build in manylinux container
      - name: Set up Docker for manylinux build
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          docker pull quay.io/pypa/manylinux2014_x86_64

      - name: Build wheels in Docker container (manylinux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker run --rm -v $(pwd):/src quay.io/pypa/manylinux2014_x86_64 bash -c "
          pip install maturin &&
          maturin build --release --out /src/dist --manylinux 2014"

      - name: Build macOS Wheels (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          maturin build --release --out dist --universal2

      - name: Build Windows Wheels (windows-latest)
        if: matrix.os == 'windows-latest'
        run: |
          maturin build --release --out dist

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist/*.whl

  upload:
    name: Upload to GitHub Releases
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
